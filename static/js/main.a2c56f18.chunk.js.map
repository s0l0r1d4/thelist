{"version":3,"sources":["components/form.js","components/task.js","components/list.js","App.js","reportWebVitals.js","index.js"],"names":["TaskForm","inputText","setInputText","tasks","setTasks","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Task","task","map","el","filter","List","filteredTasks","App","useState","status","setFilteredTasks","useEffect","saveTasks","getTasks","localStorage","setItem","JSON","stringify","getItem","loadStorage","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2c56f18.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TaskForm = ({inputText,setInputText,tasks,setTasks,setStatus})=>{\n    const input2task=(e)=>{\n        setInputText(e.target.value)\n    };\n    const submitTask=(e)=>{\n        e.preventDefault();\n        setTasks([\n            ...tasks, {text: inputText, completed: false, id: Math.random()*1000}\n        ])\n        setInputText(\"\")\n    }\n    const statusCheck=(e)=>{\n        setStatus(e.target.value)\n    }\n    return(\n        <form>\n            <input value={inputText} onChange={input2task} type=\"text\" className=\"input\" />\n            <button type=\"submit\" onClick={submitTask} className=\"task-submit\">Add Task</button>\n            <div className=\"select\">\n                <select onChange={statusCheck} name=\"tasks\" className=\"filter-task\">\n                <option value=\"all\">All</option>\n                <option value=\"completed\">Completed</option>\n                <option value=\"ongoing\">Ongoing</option>\n                </select>\n            </div>\n        </form>\n    );\n};\nexport default TaskForm\n","const Task=({text,task, tasks,setTasks})=>{\n    const deleteTask=()=>{\n        setTasks(tasks.filter(el => el.id !== task.id))\n    }\n    const completeTask=()=>{\n        setTasks(tasks.map((el) =>{\n            if (el.id===task.id){\n                return{\n                    ...el, completed: !el.completed\n                }\n            }\n            return el\n        }))\n    }\n    return(\n        <div className=\"todo\">\n            <li className={`todo-item ${task.completed ? \"completed\" : \"\"}`}>{text}</li>\n            <button onClick={completeTask} className=\"check\"></button>\n            <button onClick={deleteTask} className=\"delete\"></button>\n        </div>\n    )\n}\nexport default Task","import React from \"react\";\nimport Task from \"./task\"\n\nconst List=({tasks, setTasks, filteredTasks})=>{\n    return(\n        <div className=\"container\">\n            <ul className=\"tasks\">\n                {filteredTasks.map(task => (\n                    <Task task={task} tasks={tasks} setTasks={setTasks} key={task.id} text={task.text} id={task.id}/>\n                ))}\n            </ul>\n        </div>\n    );\n};\nexport default List","\nimport React,{useState, useEffect} from \"react\";\nimport './App.css';\nimport TaskForm from \"./components/form\"\nimport List from \"./components/list\"\n\nfunction App() {\n  const [inputText,setInputText]=useState(\"\")\n  const [tasks,setTasks]=useState([])\n  const [status, setStatus]=useState(\"all\")\n  const [filteredTasks,setFilteredTasks]=useState([])\n\n  useEffect(() =>{\n    const filter=()=>{\n      switch(status){\n        case 'completed':\n          setFilteredTasks(tasks.filter(task => task.completed===true))\n          break;\n          case 'ongoing':\n          setFilteredTasks(tasks.filter(task => task.completed===false))\n          break;\n        default:\n          setFilteredTasks(tasks)\n          break;\n  \n      }\n    }\n    filter()\n    saveTasks()\n  },[tasks,status]);\n  useEffect(() =>{\n    getTasks()\n  },[])\n\n  const saveTasks=()=>{\n      localStorage.setItem('tasks',JSON.stringify(tasks))\n  }\n  const getTasks=()=>{\n    if(localStorage.getItem('tasks')===null){\n      localStorage.setItem('tasks',JSON.stringify([]))\n    } else {\n      let loadStorage=JSON.parse(localStorage.getItem('tasks'))\n      setTasks(loadStorage)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header><h1>The List!</h1>\n      </header>\n      <TaskForm tasks={tasks} setTasks={setTasks} inputText={inputText} setInputText={setInputText} setStatus={setStatus}/>\n      <List filteredTasks={filteredTasks} tasks={tasks} setTasks={setTasks}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}